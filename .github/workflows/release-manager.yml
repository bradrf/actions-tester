name: Release Manager
on:
  # invoked from other workflows
  workflow_call:
    inputs:
      name:
        type: string
        required: true
      deploy_icon:
        type: string
      deploy_name:
        type: string
      deploy_link:
        type: string
    secrets:
      slack_webhook:
        required: true

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/workflows/scripts/release-helper

      - run: >-
          kind='${{ env.RELEASE_KIND }}';
          echo "REL_TITLE="${kind^}" release $(date -u +%Y-%m-%dT%H:%M:%SZ)" >> $GITHUB_ENV
      - run: echo "DEPLOY_NAME=${{ inputs.deploy_name || inputs.name }}" >> $GITHUB_ENV
      - run: echo "REL_MESSAGE=Deployed [${{ env.DEPLOY_NAME }}](${{ inputs.deploy_link }})" >> $GITHUB_ENV

      - name: Create or update ${{ env.RELEASE_TAG }}
        run: >-
          gh release create '${{ env.RELEASE_TAG }}' -t '${{ env.REL_TITLE }}' -n '* ${{ env.REL_MESSAGE }}'
          ||
          ( gh release view '${{ env.RELEASE_TAG }}' --json body -q .body ; echo '* ${{ env.REL_MESSAGE }}' )
          | gh release edit '${{ env.RELEASE_TAG }}' -F -
        env:
          GH_TOKEN: ${{ github.token }}

      - run: echo '### ${{ env.REL_MESSAGE }} and created ${{ env.REL_TITLE }} (${{ env.RELEASE_TAG }}) :rocket:' >> $GITHUB_STEP_SUMMARY

      - name: Dump GitHub context
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
        run: echo "$GITHUB_CONTEXT" | jq

      # slack-notify doesn't extract a valid message body for tag pushes and results in a `null` shown
      - run: |
          git log -1
          echo "SLACK_MESSAGE=$(git log -1 --oneline ${{ env.COMMIT_SHA }})" >> $GITHUB_ENV
        if: github.ref_type == 'tag'

      - run: 'true'

      # - uses: rtCamp/action-slack-notify@v2
      #   env:
      #     SLACK_CHANNEL: devops-${{ env.RELEASE_KIND == 'production' && 'prd' || 'nonprd' }}
      #     SLACK_ICON: ${{ inputs.deploy_icon }}
      #     SLACK_USERNAME: ${{ inputs.name }}
      #     SLACK_TITLE: "Deployed ${{ env.DEPLOY_NAME }} (${{ env.REL_TITLE }})"
      #     SLACK_WEBHOOK: ${{ secrets.slack_webhook }}
      #     SLACK_FOOTER: ${{ inputs.deploy_link }}
      #     MSG_MINIMAL: ref,commit
