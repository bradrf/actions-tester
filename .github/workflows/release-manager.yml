name: release-manager
on:
  # invoked from other workflows
  workflow_call:
    inputs:
      message:
        type: string
        required: true
      deploy_icon:
        type: string
        required: false
      deploy_link:
        type: string
        required: false
    secrets:
      slack_webhook:
        required: true

jobs:
  release:
    if: ${{ github.ref_name == 'main' || github.ref_name == 'production' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - run: echo "id=${{ github.ref_name == 'production' && 'prd' || 'stg' }}" >> $GITHUB_OUTPUT
        id: branch

      - run: echo "name=${{ github.ref_name == 'production' && 'Production' || 'Staging' }}" >> $GITHUB_OUTPUT
        id: deploy

      - run: echo "short=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT
        id: ref

      - run: echo "name=${{ steps.branch.outputs.id }}-release-${{ steps.ref.outputs.short }}" >> $GITHUB_OUTPUT
        id: tag

      - run: echo "name=${{ steps.deploy.outputs.name }} release $(date -u +%Y-%m-%dT%H:%M:%SZ)" >> $GITHUB_OUTPUT
        id: title

      - name: Create or update ${{ steps.tag.outputs.name }}
        run: >
          printf "url=";
          gh release create "${{ steps.tag.outputs.name }}" -t "${{ steps.title.outputs.name }}" -n "* ${{ inputs.message }}"
          ||
          ( gh release view "${{ steps.tag.outputs.name }}" --json body -q .body ; echo "* ${{ inputs.message }}" )
          | gh release edit "${{ steps.tag.outputs.name }}" -F - >> $GITHUB_OUTPUT
        env:
          GH_TOKEN: ${{ github.token }}
        id: rel

      - uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_CHANNEL: devops-${{ github.ref_name == 'production' && 'prd' || 'nonprd' }}
          SLACK_ICON: ${{ inputs.deploy_icon }}
          SLACK_USERNAME: relmgr
          SLACK_TITLE: "${{ inputs.message }} (${{ steps.title.outputs.name }})"
          SLACK_WEBHOOK: ${{ secrets.slack_webhook }}
          SLACK_FOOTER: ${{ inputs.deploy_link || steps.rel.outputs.url }}
          MSG_MINIMAL: ref,commit
