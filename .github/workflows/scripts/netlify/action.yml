name: netlify
description: Executes Netlify CLI deployments
inputs:
  site_id:
    description: Site ID
    required: true
  auth_token:
    description: Authentication token
    required: true
  context:
    description: Build context to use
    required: true
  doppler_token:
    description: Authentication token for Web-UI environment variables
    required: true
  ui:
    description: web-ui or web-messenger
    required: true

runs:
  using: composite
  steps:
    # - run: >-
    #     if [[ "${{ github.event_name }}" = "pull_request" ]]; then
    #       echo "COMMIT_SHA=${{ github.event.pull_request.head.sha }}"
    #     else
    #       echo "COMMIT_SHA=${{ github.sha }}"
    #     fi >> $GITHUB_ENV;
    #   shell: bash

    # - run: >-
    #     case "${{ inputs.context }}" in
    #       production) echo DEPLOY_ARG="--prod" ;;
    #       staging) echo DEPLOY_ARG="--alias staging" ;;
    #       *) echo DEPLOY_ARG="--alias deploy-preview-${{ github.event.number }}" ;;
    #     esac >> $GITHUB_ENV
    #   shell: bash

    # # strip single quotes to avoid issues when the message is passed as the deploy message below
    # - run: echo "MESSAGE=$(git log -1 --oneline ${{ env.COMMIT_SHA }} | sed -e "s/'/_/g")" >> $GITHUB_ENV
    #   shell: bash

    # - run: >-
    #     netlify deploy -s ${{ inputs.site_id }} --build --context ${{ inputs.context }} --dir ${{ inputs.ui }}/.next
    #     ${{ env.DEPLOY_ARG }} --message '${{ env.MESSAGE }}' | tee deploy.out
    #   if: inputs.ui == 'web-ui'
    #   shell: bash
    #   env:
    #     NETLIFY_AUTH_TOKEN: ${{ inputs.auth_token }}
    #     DOPPLER_TOKEN: ${{ inputs.doppler_token }}

    # - run: >-
    #     netlify deploy -s ${{ inputs.site_id }} --build --context ${{ inputs.context }} --dir ${{ inputs.ui }}/out
    #     ${{ env.DEPLOY_ARG }} --message '${{ env.MESSAGE }}' | tee deploy.out
    #   if: inputs.ui == 'web-messenger'
    #   shell: bash
    #   env:
    #     NETLIFY_AUTH_TOKEN: ${{ inputs.auth_token }}
    #     DOPPLER_TOKEN: ${{ inputs.doppler_token }}

    # - run: awk '/^Logs:/{print "DEPLOY_LOG=" $2} /^Website/{print "DEPLOY_URL=" $NF}' deploy.out >> $GITHUB_ENV
    #   shell: bash

    # - run: echo "DEPLOY_ID=$(basename '${{ env.DEPLOY_LOG }}')" >> $GITHUB_ENV
    #   shell: bash
    - run: echo "DEPLOY_URL=https://floofy2.dev" >> $GITHUB_ENV
      shell: bash

    - run: >-
        if gh pr view ${{ env.RELEASE_PR_NUMBER }} --json comments -q '.comments.[].body' | grep -qF "${{ env.DEPLOY_URL }}"; then
          echo 'PR comment already includes ${{ env.DEPLOY_URL }}' ;
        else
          cat ./.github/workflows/scripts/netlify/pull_request_template.md | envsubst | gh pr comment ${{ env.RELEASE_PR_NUMBER }} -F - ;
        fi
      if: env.RELEASE_PR_NUMBER != null
      shell: bash
      env:
        GH_TOKEN: ${{ github.token }}
