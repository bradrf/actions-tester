name: Release Helper
description: Evaluates the state of git to determine the kind of release to be run (if any)
inputs:
  gh_token:
    description: GitHub Token for gh cli
    required: true

runs:
  using: composite
  steps:
    # names are ignored in scripts (!!) so we "log" it with a comment on the 1st line
    - run: |
        # Evaluate state of ${{ github.ref_name }}
        sha=${{ github.sha }}
        if [ ${{ github.ref_type == 'tag' && startsWith(github.ref_name, 'release-prd-') }} = true ]; then
          kind=production
          abbrev=prd
        elif [ ${{ github.ref_type == 'branch' && github.ref_name == 'main' }} = true -o ${{ github.ref_type == 'tag' && startsWith(github.ref_name, 'release-stg-') }} = true ]; then
          kind=staging
          abbrev=stg
        elif [ ${{ github.event_name == 'pull_request' }} = true -a '${{ github.event.pull_request.draft }}' = false ]; then
          kind=preview
          abbrev=pre
          sha=${{ github.event.pull_request.head.sha }}
        else
          kind=other
          abbrev=oth
          prs=$(gh pr list -R '${{ github.repository }}' -H '${{ github.ref_name }}' --json title,isDraft,url)
          if echo "$prs" | grep -qvF '^no pull'; then
            title=$(echo "$prs" | jq -r '.[0].title')
            isDraft=$(echo "$prs" | jq -r '.[0].isDraft')
            url=$(echo "$prs" | jq -r '.[0].url')
            if [ "$isDraft" = false ]; then
              kind=preview
              abbrev=pre
            else
              prefix='Draft '
            fi
            echo "${prefix}Pull Request: [${title}](${url})" >> $GITHUB_STEP_SUMMARY
          fi
        fi
        if [ ${{ github.ref_type == 'tag' }} = true ]; then
          tag='${{ github.ref_name }}'
          if [ ${{ startsWith(github.ref_name, 'release-') }} = true ]; then
            # Retrieve the annotated tag (see https://github.com/actions/checkout/issues/290)
            git fetch origin '+${{ github.ref }}:${{ github.ref }}'
            git tag -l -n1 "${{ github.ref_name }}" | sed 's/^[^ ]* *//'
            echo "RELEASE_TARGETS=$(git tag -l -n "${{ github.ref_name }}" | sed 's/^[^ ]* *//')" >> $GITHUB_ENV
          fi
        else
          tag="release-${abbrev}-${GITHUB_SHA:0:7}"
        fi
        echo "RELEASE_SHA=${sha}" >> $GITHUB_ENV
        echo "RELEASE_KIND=${kind}" >> $GITHUB_ENV
        echo "RELEASE_ABBREV=${abbrev}" >> $GITHUB_ENV
        echo "RELEASE_TAG=${tag}" >> $GITHUB_ENV
        echo "RELEASE_TITLE="${kind^}" release $(date -u +%Y-%m-%dT%H:%M:%SZ)" >> $GITHUB_ENV
      shell: bash
      env:
        GH_TOKEN: ${{ inputs.gh_token }}

    - run: echo "RELEASE_ENV=$(env | grep ^RELEASE_ | base64 -w0)" >> $GITHUB_ENV
      shell: bash
